{
	"swagger": "2.0",
	"info": {
		"title": "Pineapple Lead API",
		"description": "An API for transferring leads and getting quick quotes from the Pineapple insurance system",
		"version": "1.0.0",
		"contact": {
			"name": "SureStrat Support",
			"email": "support@surestrat.com"
		}
	},
	"host": "localhost:9000",
	"basePath": "/",
	"schemes": ["http", "https"],
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"tags": [
		{
			"name": "leads",
			"description": "Lead transfer operations"
		},
		{
			"name": "quotes",
			"description": "Quick quote operations"
		},
		{
			"name": "health",
			"description": "System health check"
		}
	],
	"paths": {
		"/users/motor_lead": {
			"post": {
				"tags": ["leads"],
				"summary": "Transfer a lead to Pineapple",
				"description": "Transfers customer lead information to the Pineapple system",
				"operationId": "transferLead",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"in": "body",
						"name": "leadTransferRequest",
						"description": "Lead information to transfer",
						"required": true,
						"schema": {
							"$ref": "#/definitions/LeadTransferRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Lead transferred successfully",
						"schema": {
							"$ref": "#/definitions/LeadTransferResponse"
						}
					},
					"400": {
						"description": "Invalid input data",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"429": {
						"description": "Too many requests",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/api/v1/quote/quick-quote": {
			"post": {
				"tags": ["quotes"],
				"summary": "Get a quick quote for vehicles",
				"description": "Requests a quick insurance quote from Pineapple for one or more vehicles",
				"operationId": "getQuickQuote",
				"consumes": ["application/json"],
				"produces": ["application/json"],
				"parameters": [
					{
						"in": "body",
						"name": "quickQuoteRequest",
						"description": "Vehicle information for quote",
						"required": true,
						"schema": {
							"$ref": "#/definitions/QuickQuoteRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Quote retrieved successfully",
						"schema": {
							"$ref": "#/definitions/QuickQuoteResponse"
						}
					},
					"400": {
						"description": "Invalid input data",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"429": {
						"description": "Too many requests",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"500": {
						"description": "Internal server error",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/health": {
			"get": {
				"tags": ["health"],
				"summary": "Check API health",
				"description": "Returns information about the API's health status",
				"operationId": "healthCheck",
				"produces": ["application/json"],
				"responses": {
					"200": {
						"description": "API is healthy",
						"schema": {
							"$ref": "#/definitions/HealthResponse"
						}
					}
				}
			}
		},
		"/docs": {
			"get": {
				"description": "API Documentation",
				"responses": {
					"302": {
						"description": "Redirect to API documentation"
					}
				}
			}
		}
	},
	"definitions": {
		"LeadTransferRequest": {
			"type": "object",
			"required": [
				"source",
				"first_name",
				"last_name",
				"email",
				"contact_number"
			],
			"properties": {
				"source": {
					"type": "string",
					"description": "Lead source identifier",
					"example": "SureStrat"
				},
				"first_name": {
					"type": "string",
					"description": "Customer's first name",
					"example": "Peter"
				},
				"last_name": {
					"type": "string",
					"description": "Customer's last name",
					"example": "Smith"
				},
				"email": {
					"type": "string",
					"format": "email",
					"description": "Customer's email address",
					"example": "PeterSmith007@gmail.com"
				},
				"id_number": {
					"type": "string",
					"description": "Customer's ID number (13 digits)",
					"example": "9510025800086"
				},
				"quote_id": {
					"type": "string",
					"description": "Associated quote ID (optional)",
					"example": "679765d8cdfba62ff342d2ef"
				},
				"contact_number": {
					"type": "string",
					"description": "Customer's contact phone number",
					"example": "0737111119"
				}
			}
		},
		"LeadTransferResponse": {
			"type": "object",
			"properties": {
				"success": {
					"type": "boolean",
					"description": "Whether the operation was successful",
					"example": true
				},
				"data": {
					"type": "object",
					"properties": {
						"uuid": {
							"type": "string",
							"description": "Unique identifier for the lead",
							"example": "66e1894aa137e938de5a76c5"
						},
						"redirect_url": {
							"type": "string",
							"description": "URL to redirect the customer to continue the journey",
							"example": "https://test-pineapple-claims.herokuapp.com/car-insurance/get-started?uuid=66e1894aa137e938de5a76c5&ref=serithi"
						}
					}
				}
			}
		},
		"QuickQuoteRequest": {
			"type": "object",
			"required": ["source", "externalReferenceId", "vehicles"],
			"properties": {
				"source": {
					"type": "string",
					"description": "Quote source identifier",
					"example": "SureStrat"
				},
				"externalReferenceId": {
					"type": "string",
					"description": "External reference for tracking",
					"example": "REF-12345678"
				},
				"vehicles": {
					"type": "array",
					"description": "Array of vehicle objects",
					"items": {
						"$ref": "#/definitions/Vehicle"
					}
				}
			}
		},
		"Vehicle": {
			"type": "object",
			"required": [
				"year",
				"make",
				"model",
				"mmCode",
				"modified",
				"category",
				"colour",
				"engineSize",
				"financed",
				"owner",
				"status",
				"partyIsRegularDriver",
				"accessories",
				"accessoriesAmount",
				"retailValue",
				"marketValue",
				"insuredValueType",
				"useType",
				"overnightParkingSituation",
				"coverCode",
				"address",
				"regularDriver"
			],
			"properties": {
				"year": {
					"type": "integer",
					"description": "Manufacturing year of the vehicle",
					"example": 2018
				},
				"make": {
					"type": "string",
					"description": "Manufacturer of the vehicle",
					"example": "Volkswagen"
				},
				"model": {
					"type": "string",
					"description": "Model of the vehicle",
					"example": "Polo Tsi 1.2 Comfortline"
				},
				"mmCode": {
					"type": "string",
					"description": "Manufacturer's model code",
					"example": "00815170"
				},
				"modified": {
					"type": "string",
					"enum": ["Y", "N"],
					"description": "Whether the vehicle has been modified (Y/N)",
					"example": "N"
				},
				"category": {
					"type": "string",
					"enum": [
						"SUV",
						"HB",
						"SD",
						"CP",
						"SAV",
						"DC",
						"SC",
						"MPV",
						"CB",
						"SW",
						"XO",
						"HT",
						"RV",
						"CC",
						"PV",
						"BS",
						"DS"
					],
					"description": "Vehicle category code",
					"example": "HB"
				},
				"colour": {
					"type": "string",
					"description": "Color of the vehicle",
					"example": "White"
				},
				"engineSize": {
					"type": "number",
					"format": "float",
					"description": "Engine size in liters",
					"example": 1.2
				},
				"financed": {
					"type": "string",
					"enum": ["Y", "N"],
					"description": "Whether the vehicle is financed (Y/N)",
					"example": "N"
				},
				"owner": {
					"type": "string",
					"enum": ["Y", "N"],
					"description": "Whether the requester is the vehicle owner (Y/N)",
					"example": "Y"
				},
				"status": {
					"type": "string",
					"enum": ["New", "SecondHand"],
					"description": "Vehicle status",
					"example": "New"
				},
				"partyIsRegularDriver": {
					"type": "string",
					"enum": ["Y", "N"],
					"description": "Whether the requester is the regular driver (Y/N)",
					"example": "Y"
				},
				"accessories": {
					"type": "string",
					"enum": ["Y", "N"],
					"description": "Whether the vehicle has non-standard accessories (Y/N)",
					"example": "Y"
				},
				"accessoriesAmount": {
					"type": "number",
					"format": "float",
					"description": "Value of installed accessories",
					"example": 20000
				},
				"retailValue": {
					"type": "number",
					"format": "float",
					"description": "Retail value of the vehicle",
					"example": 200000
				},
				"marketValue": {
					"type": "number",
					"format": "float",
					"description": "Market value of the vehicle",
					"example": 180000
				},
				"insuredValueType": {
					"type": "string",
					"enum": ["Retail", "Market"],
					"description": "Type of insured value",
					"example": "Retail"
				},
				"useType": {
					"type": "string",
					"enum": ["Private", "Commercial", "BusinessUse"],
					"description": "Type of vehicle use",
					"example": "Private"
				},
				"overnightParkingSituation": {
					"type": "string",
					"enum": ["Garage", "Carport", "InTheOpen", "Unconfirmed"],
					"description": "Where the vehicle is parked overnight",
					"example": "Garage"
				},
				"coverCode": {
					"type": "string",
					"enum": ["Comprehensive"],
					"description": "Type of insurance cover",
					"example": "Comprehensive"
				},
				"address": {
					"$ref": "#/definitions/Address"
				},
				"regularDriver": {
					"$ref": "#/definitions/Driver"
				}
			}
		},
		"Address": {
			"type": "object",
			"required": [
				"addressLine",
				"postalCode",
				"suburb",
				"latitude",
				"longitude"
			],
			"properties": {
				"addressLine": {
					"type": "string",
					"description": "The main address line",
					"example": "123 Main Street"
				},
				"postalCode": {
					"type": "integer",
					"description": "Postal code",
					"example": 2196
				},
				"suburb": {
					"type": "string",
					"description": "Suburb name",
					"example": "Sandton"
				},
				"latitude": {
					"type": "number",
					"format": "float",
					"description": "Latitude coordinate",
					"example": -26.10757
				},
				"longitude": {
					"type": "number",
					"format": "float",
					"description": "Longitude coordinate",
					"example": 28.0567
				}
			}
		},
		"Driver": {
			"type": "object",
			"required": [
				"maritalStatus",
				"relationToPolicyHolder",
				"emailAddress",
				"mobileNumber",
				"idNumber",
				"licenseIssueDate",
				"dateOfBirth"
			],
			"properties": {
				"maritalStatus": {
					"type": "string",
					"enum": [
						"Single",
						"Married",
						"Divorced",
						"Widowed",
						"LivingTogether",
						"Annulment"
					],
					"description": "Marital status of the driver",
					"example": "Married"
				},
				"currentlyInsured": {
					"type": "boolean",
					"description": "Whether the driver currently has insurance",
					"example": true
				},
				"yearsWithoutClaims": {
					"type": "integer",
					"description": "Number of years without claims",
					"example": 0
				},
				"relationToPolicyHolder": {
					"type": "string",
					"enum": ["Self", "Spouse", "Child", "Other"],
					"description": "Driver's relationship to the policyholder",
					"example": "Self"
				},
				"emailAddress": {
					"type": "string",
					"format": "email",
					"description": "Driver's email address",
					"example": "example@gmail.com"
				},
				"mobileNumber": {
					"type": "string",
					"description": "Driver's mobile phone number",
					"example": "0821234567"
				},
				"idNumber": {
					"type": "string",
					"description": "Driver's ID number (13 digits)",
					"example": "9404054800086"
				},
				"prvInsLosses": {
					"type": "integer",
					"description": "Number of previous insurance losses",
					"example": 0
				},
				"licenseIssueDate": {
					"type": "string",
					"format": "date",
					"description": "Date the driver's license was issued (YYYY-MM-DD)",
					"example": "2018-10-02"
				},
				"dateOfBirth": {
					"type": "string",
					"format": "date",
					"description": "Driver's date of birth (YYYY-MM-DD)",
					"example": "1994-04-05"
				}
			}
		},
		"QuickQuoteResponse": {
			"type": "object",
			"properties": {
				"success": {
					"type": "boolean",
					"description": "Whether the operation was successful",
					"example": true
				},
				"id": {
					"type": "string",
					"description": "Quote identifier",
					"example": "679765d8cdfba62ff342d2ef"
				},
				"data": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"premium": {
								"type": "number",
								"format": "float",
								"description": "Monthly premium amount",
								"example": 1240.46
							},
							"excess": {
								"type": "number",
								"format": "float",
								"description": "Excess amount",
								"example": 6200
							}
						}
					}
				}
			}
		},
		"ErrorResponse": {
			"type": "object",
			"properties": {
				"success": {
					"type": "boolean",
					"description": "Always false for errors",
					"example": false
				},
				"error": {
					"type": "string",
					"description": "Error message details",
					"example": "Validation error: field 'email' is required"
				}
			}
		},
		"HealthResponse": {
			"type": "object",
			"properties": {
				"status": {
					"type": "string",
					"description": "Current API status",
					"example": "healthy"
				},
				"version": {
					"type": "string",
					"description": "API version",
					"example": "1.0.0"
				},
				"cpus": {
					"type": "integer",
					"description": "Number of CPUs used by the server",
					"example": 8
				}
			}
		}
	}
}
